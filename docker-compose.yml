version: "3.9"

services:
  mysql:
    image: mysql:8.1
    container_name: mysql_container
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "Password123*"
      MYSQL_DATABASE: "find_my_friend"
      MYSQL_USER: "appuser"
      MYSQL_PASSWORD: "Password123*"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "appuser", "-pPassword123*"]
      interval: 10s
      retries: 10
      start_period: 30s

  go-api-find-my-friend:
    build: .
    container_name: backend_container
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      ENVIRONMENT: production
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: appuser
      DB_PASSWORD: "Password123*"
      DB_NAME: find_my_friend
      CLOUDINARY_CLOUD_NAME: "dw9e57leg"
      CLOUDINARY_API_KEY: "253523817534744"
      CLOUDINARY_API_SECRET: "2K5NwA4y4vKtUdKaXKV1uZjtCr0x"
    ports:
      - "8080:8080"
    restart: unless-stopped

  react-find-my-friend:
    image: react-find-my-friend:latest
    container_name: frontend_container
    depends_on:
      - go-api-find-my-friend
    ports:
      - "3000:3000"
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: nginx_container
    depends_on:
      - react-find-my-friend
      - go-api-find-my-friend
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped

volumes:
  mysql_data:
